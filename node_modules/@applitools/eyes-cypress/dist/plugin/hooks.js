"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const handleTestResults_1 = __importDefault(require("./handleTestResults"));
function makeGlobalRunHooks({ closeManager, closeBatches, closeUniversalServer }) {
    return {
        'before:run': ({ config }) => {
            if (!config.isTextTerminal)
                return;
        },
        'after:run': async ({ config }) => {
            try {
                if (!config.isTextTerminal)
                    return;
                const summaries = await closeManager();
                let testResults;
                for (const summary of summaries) {
                    testResults = summary.results.map(({ testResults }) => testResults);
                }
                if (!config.appliConfFile.dontCloseBatches) {
                    await closeBatches({
                        batchIds: [config.appliConfFile.batchId || config.appliConfFile.batch.id],
                        serverUrl: config.appliConfFile.serverUrl,
                        proxy: config.appliConfFile.proxy,
                        apiKey: config.appliConfFile.apiKey,
                    });
                }
                if (config.appliConfFile.tapDirPath) {
                    await handleTestResults_1.default.handleBatchResultsFile(testResults, {
                        tapDirPath: config.appliConfFile.tapDirPath,
                        tapFileName: config.appliConfFile.tapFileName,
                    });
                }
            }
            finally {
                await closeUniversalServer();
            }
        },
    };
}
exports.default = makeGlobalRunHooks;
