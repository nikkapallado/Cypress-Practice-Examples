export type EyesSelector<TSelector = never> = string | TSelector | { selector: string | TSelector; type?: string; shadow?: EyesSelector<TSelector>; frame?: EyesSelector<TSelector>; };
export enum TestResultsStatus {
    Passed = 'Passed',
    Unresolved = 'Unresolved',
    Failed = 'Failed'
}
export type CypressCheckSettings = {
    name?: string;
    region?: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
    matchLevel?: "None" | "Layout1" | "Layout" | "Layout2" | "Content" | "IgnoreColors" | "Strict" | "Exact";
    useDom?: boolean;
    sendDom?: boolean;
    enablePatterns?: boolean;
    ignoreDisplacements?: boolean;
    ignoreMismatch?: boolean;
    ignoreCaret?: boolean;
    ignoreRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    layoutRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    strictRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    contentRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    floatingRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        offset?: { top?: number; bottom?: number; left?: number; right?: number; };
    } | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        maxUpOffset?: number;
        maxDownOffset?: number;
        maxLeftOffset?: number;
        maxRightOffset?: number;
    }>;
    accessibilityRegions?: Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        type?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
    }>;
    pageId?: string;
    variationGroupId?: string;
    frames?: Array<{ frame: number | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); scrollRootElement?: (HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }); } | (number | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })))>;
    webview?: string | boolean;
    scrollRootElement?: (HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; });
    fully?: boolean;
    disableBrowserFetching?: boolean;
    layoutBreakpoints?: boolean | Array<number>;
    visualGridOptions?: { [key: string]: any; };
    nmgOptions?: { [key: string]: any; };
    hooks?: { beforeCaptureScreenshot: string; };
    renderId?: string;
    timeout?: number;
    waitBeforeCapture?: number;
    lazyLoad?: boolean | { scrollLength?: number; waitingTime?: number; maxAmountToScroll?: number; };
    tag?: string;
    target?: "window" | "region";
    selector?: "string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; };
    element?: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; };
    ignore?: { left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; } | Array<{ left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    layout?: { left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; } | Array<{ left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    content?: { left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; } | Array<{ left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    strict?: { left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; } | Array<{ left: number; top: number; width: number; height: number; } | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; } | ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | { region: {
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; })); padding?: number | { top: number; bottom: number; left: number; right: number; }; regionId?: string; }>;
    floating?: ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        offset?: { top?: number; bottom?: number; left?: number; right?: number; };
    } | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        maxUpOffset?: number;
        maxDownOffset?: number;
        maxLeftOffset?: number;
        maxRightOffset?: number;
    } | (({ left: number; top: number; width: number; height: number; } | ("string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }) | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; }) & { maxUpOffset?: number; maxDownOffset?: number; maxLeftOffset?: number; maxRightOffset?: number; }) | Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        offset?: { top?: number; bottom?: number; left?: number; right?: number; };
    } | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        maxUpOffset?: number;
        maxDownOffset?: number;
        maxLeftOffset?: number;
        maxRightOffset?: number;
    } | (({ left: number; top: number; width: number; height: number; } | ("string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }) | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; }) & { maxUpOffset?: number; maxDownOffset?: number; maxLeftOffset?: number; maxRightOffset?: number; })>;
    accessibility?: ({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        type?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
    } | (({ left: number; top: number; width: number; height: number; } | ("string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }) | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; }) & { accessibilityType?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject"; }) | Array<({
        x: number;
        y: number;
        width: number;
        height: number;
    } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }))) | {
        region: {
            x: number;
            y: number;
            width: number;
            height: number;
        } | ((HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | (string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; } | { selector: string | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }; type?: string; shadow?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; frame?: EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>; }));
        padding?: number | { top: number; bottom: number; left: number; right: number; };
        regionId?: string;
        type?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
    } | (({ left: number; top: number; width: number; height: number; } | ("string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }) | { element: HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }; regionId?: string; padding?: any; }) & { accessibilityType?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject"; })>;
    scriptHooks?: { beforeCaptureScreenshot: string; };
};
export type CypressEyesConfig = {
    agentId?: string;
    apiKey?: string;
    serverUrl?: string;
    proxy?: { url: string; username?: string; password?: string; isHttpOnly?: boolean; };
    autProxy?: {
        url: string;
        username?: string;
        password?: string;
        isHttpOnly?: boolean;
        mode?: "Allow" | "Block";
        domains?: Array<string>;
    };
    isDisabled?: boolean;
    appName?: string;
    testName?: string;
    displayName?: string;
    viewportSize?: { width: number; height: number; };
    sessionType?: "SEQUENTIAL" | "PROGRESSION";
    properties?: Array<{ name: string; value: string; }>;
    batch?: {
        id?: string;
        name?: string;
        sequenceName?: string;
        startedAt?: string | Date;
        notifyOnCompletion?: boolean;
        properties?: Array<{ name: string; value: string; }>;
    };
    defaultMatchSettings?: {
        exact?: { minDiffIntensity: number; minDiffWidth: number; minDiffHeight: number; matchThreshold: number; };
        matchLevel?: "None" | "Layout1" | "Layout" | "Layout2" | "Content" | "IgnoreColors" | "Strict" | "Exact";
        ignoreCaret?: boolean;
        useDom?: boolean;
        enablePatterns?: boolean;
        ignoreDisplacements?: boolean;
        ignoreRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        }>;
        layoutRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        }>;
        strictRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        }>;
        contentRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        }>;
        floatingRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        } | {
            region: {
                x: number;
                y: number;
                width: number;
                height: number;
            };
            maxUpOffset?: number;
            maxDownOffset?: number;
            maxLeftOffset?: number;
            maxRightOffset?: number;
        }>;
        accessibilityRegions?: Array<{
            x: number;
            y: number;
            width: number;
            height: number;
        } | { region: {
            x: number;
            y: number;
            width: number;
            height: number;
        }; type?: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject"; }>;
        accessibilitySettings?: { level?: "AA" | "AAA"; guidelinesVersion?: "WCAG_2_0" | "WCAG_2_1"; };
    };
    hostApp?: string;
    hostOS?: string;
    hostAppInfo?: string;
    hostOSInfo?: string;
    deviceInfo?: string;
    baselineEnvName?: string;
    environmentName?: string;
    branchName?: string;
    parentBranchName?: string;
    baselineBranchName?: string;
    compareWithParentBranch?: boolean;
    ignoreBaseline?: boolean;
    ignoreGitMergeBase?: boolean;
    saveFailedTests?: boolean;
    saveNewTests?: boolean;
    saveDiffs?: boolean;
    sendDom?: boolean;
    matchTimeout?: number;
    forceFullPageScreenshot?: boolean;
    waitBeforeScreenshots?: number;
    stitchMode?: "Scroll" | "CSS";
    hideScrollbars?: boolean;
    hideCaret?: boolean;
    stitchOverlap?: number;
    scrollRootElement?: (HTMLElement | { [n: number]: HTMLElement; [Symbol.iterator](): Iterator<HTMLElement, any, undefined>; }) | EyesSelector<"string" | { selector: string; type?: "css" | "xpath"; nodeType?: "element" | "shadow-root"; }>;
    cut?: { top: number; right: number; bottom: number; left: number; } | { x: number; y: number; width: number; height: number; };
    rotation?: 0 | 270 | -270 | 180 | -180 | 90 | -90;
    scaleRatio?: number;
    waitBeforeCapture?: number;
    browsersInfo?: Array<{ name?: "chrome" | "firefox" | "edge" | "chrome-one-version-back" | "chrome-two-versions-back" | "firefox-one-version-back" | "firefox-two-versions-back" | "ie" | "ie10" | "edgechromium" | "edgelegacy" | "edgechromium-one-version-back" | "edgechromium-two-versions-back" | "safari" | "safari-earlyaccess" | "safari-one-version-back" | "safari-two-versions-back"; width: number; height: number; } | { chromeEmulationInfo: { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; }; } | { iosDeviceInfo: { deviceName: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)"; iosVersion?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { androidDeviceInfo: { deviceName: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21" | "Galaxy S21 Plus" | "Galaxy S21 Ultra" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite"; version?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; }>;
    visualGridOptions?: Record<string, any>;
    layoutBreakpoints?: boolean | Array<number>;
    disableBrowserFetching?: boolean;
    browser?: { name?: "chrome" | "firefox" | "edge" | "chrome-one-version-back" | "chrome-two-versions-back" | "firefox-one-version-back" | "firefox-two-versions-back" | "ie" | "ie10" | "edgechromium" | "edgelegacy" | "edgechromium-one-version-back" | "edgechromium-two-versions-back" | "safari" | "safari-earlyaccess" | "safari-one-version-back" | "safari-two-versions-back"; width: number; height: number; } | { chromeEmulationInfo: { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; }; } | { iosDeviceInfo: { deviceName: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)"; iosVersion?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { androidDeviceInfo: { deviceName: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21" | "Galaxy S21 Plus" | "Galaxy S21 Ultra" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite"; version?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { deviceName: string; screenOrientation?: "landscape" | "portrait"; name?: string; } | Array<{ name?: "chrome" | "firefox" | "edge" | "chrome-one-version-back" | "chrome-two-versions-back" | "firefox-one-version-back" | "firefox-two-versions-back" | "ie" | "ie10" | "edgechromium" | "edgelegacy" | "edgechromium-one-version-back" | "edgechromium-two-versions-back" | "safari" | "safari-earlyaccess" | "safari-one-version-back" | "safari-two-versions-back"; width: number; height: number; } | { chromeEmulationInfo: { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; }; } | { iosDeviceInfo: { deviceName: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)"; iosVersion?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { androidDeviceInfo: { deviceName: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21" | "Galaxy S21 Plus" | "Galaxy S21 Ultra" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite"; version?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { deviceName: string; screenOrientation?: "landscape" | "portrait"; name?: string; }>;
    batchId?: string;
    batchName?: string;
    batchSequence?: string;
    notifyOnCompletion?: boolean;
    envName?: string;
    accessibilitySettings?: { level?: "AA" | "AAA"; guidelinesVersion?: "WCAG_2_0" | "WCAG_2_1"; };
};
export type CypressTestResultsSummary = { getAllResults(): Array<{ getTestResults(): {
    getId(): string;
    getName(): string;
    getSecretToken(): string;
    getStatus(): TestResultsStatus;
    getAppName(): string;
    getBatchName(): string;
    getBatchId(): string;
    getBranchName(): string;
    getHostOS(): string;
    getHostApp(): string;
    getHostDisplaySize(): { getWidth(): number; setWidth(width: number): void; getHeight(): number; setHeight(height: number): void; };
    getAccessibilityStatus(): { readonly status: "Passed" | "Failed"; readonly level: "AA" | "AAA"; readonly version: "WCAG_2_0" | "WCAG_2_1"; };
    getStartedAt(): Date;
    getDuration(): number;
    getIsNew(): boolean;
    getIsDifferent(): boolean;
    getIsAborted(): boolean;
    getAppUrls(): { getBatch(): string; getSession(): string; };
    getApiUrls(): { getBatch(): string; getSession(): string; };
    getStepsInfo(): Array<{
        getName(): string;
        getIsDifferent(): boolean;
        getHasBaselineImage(): boolean;
        getHasCurrentImage(): boolean;
        getAppUrls(): { getStep(): string; getStepEditor(): string; };
        getApiUrls(): {
            getBaselineImage(): string;
            getCurrentImage(): string;
            getCheckpointImage(): string;
            getCheckpointImageThumbnail(): string;
            getDiffImage(): string;
        };
        getRenderId(): Array<string>;
    }>;
    getSteps(): number;
    getMatches(): number;
    getMismatches(): number;
    getMissing(): number;
    getExactMatches(): number;
    getStrictMatches(): number;
    getContentMatches(): number;
    getLayoutMatches(): number;
    getNoneMatches(): number;
    getUrl(): string;
    isPassed(): boolean;
    delete(): Promise<void>;
}; getException(): Error; getBrowserInfo(): { name?: "chrome" | "firefox" | "edge" | "chrome-one-version-back" | "chrome-two-versions-back" | "firefox-one-version-back" | "firefox-two-versions-back" | "ie" | "ie10" | "edgechromium" | "edgelegacy" | "edgechromium-one-version-back" | "edgechromium-two-versions-back" | "safari" | "safari-earlyaccess" | "safari-one-version-back" | "safari-two-versions-back"; width: number; height: number; } | { chromeEmulationInfo: { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; }; } | { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; } | { iosDeviceInfo: { deviceName: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)"; iosVersion?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { androidDeviceInfo: { deviceName: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21" | "Galaxy S21 Plus" | "Galaxy S21 Ultra" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite"; version?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; }; }>; [Symbol.iterator](): Iterator<{ getTestResults(): {
    getId(): string;
    getName(): string;
    getSecretToken(): string;
    getStatus(): TestResultsStatus;
    getAppName(): string;
    getBatchName(): string;
    getBatchId(): string;
    getBranchName(): string;
    getHostOS(): string;
    getHostApp(): string;
    getHostDisplaySize(): { getWidth(): number; setWidth(width: number): void; getHeight(): number; setHeight(height: number): void; };
    getAccessibilityStatus(): { readonly status: "Passed" | "Failed"; readonly level: "AA" | "AAA"; readonly version: "WCAG_2_0" | "WCAG_2_1"; };
    getStartedAt(): Date;
    getDuration(): number;
    getIsNew(): boolean;
    getIsDifferent(): boolean;
    getIsAborted(): boolean;
    getAppUrls(): { getBatch(): string; getSession(): string; };
    getApiUrls(): { getBatch(): string; getSession(): string; };
    getStepsInfo(): Array<{
        getName(): string;
        getIsDifferent(): boolean;
        getHasBaselineImage(): boolean;
        getHasCurrentImage(): boolean;
        getAppUrls(): { getStep(): string; getStepEditor(): string; };
        getApiUrls(): {
            getBaselineImage(): string;
            getCurrentImage(): string;
            getCheckpointImage(): string;
            getCheckpointImageThumbnail(): string;
            getDiffImage(): string;
        };
        getRenderId(): Array<string>;
    }>;
    getSteps(): number;
    getMatches(): number;
    getMismatches(): number;
    getMissing(): number;
    getExactMatches(): number;
    getStrictMatches(): number;
    getContentMatches(): number;
    getLayoutMatches(): number;
    getNoneMatches(): number;
    getUrl(): string;
    isPassed(): boolean;
    delete(): Promise<void>;
}; getException(): Error; getBrowserInfo(): { name?: "chrome" | "firefox" | "edge" | "chrome-one-version-back" | "chrome-two-versions-back" | "firefox-one-version-back" | "firefox-two-versions-back" | "ie" | "ie10" | "edgechromium" | "edgelegacy" | "edgechromium-one-version-back" | "edgechromium-two-versions-back" | "safari" | "safari-earlyaccess" | "safari-one-version-back" | "safari-two-versions-back"; width: number; height: number; } | { chromeEmulationInfo: { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; }; } | { deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11"; screenOrientation?: "landscape" | "portrait"; } | { iosDeviceInfo: { deviceName: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)"; iosVersion?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; } | { androidDeviceInfo: { deviceName: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21" | "Galaxy S21 Plus" | "Galaxy S21 Ultra" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite"; version?: "latest" | "latest-1"; screenOrientation?: "landscape" | "portrait"; }; }; }, any, undefined>; };
export type EyesPluginConfig = {
    tapDirPath: string;
    tapFileName: string;
    eyesIsDisabled: boolean;
    eyesBrowser: any;
    eyesLayoutBreakpoints: any;
    eyesFailCypressOnDiff: boolean;
    eyesDisableBrowserFetching: boolean;
    eyesTestConcurrency: number;
    eyesWaitBeforeCapture: number;
    eyesPort?: number;
};
declare const _default: (pluginInitArgs: Cypress.ConfigOptions | NodeJS.Module) => Cypress.ConfigOptions | NodeJS.Module | (() => any);
export default _default;
